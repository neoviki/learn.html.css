/* CSS VARIABLE */

/* CARD{
 *          BOX{
 *                  SVG{
 *                      CIRCLE{}
 *                  }
 *          }
 * }
 *
 */
:root {
  /* Color Codes */
  --c-blue-1: #1b1bff;
  --c-black-1: #000009;
  --c-black-2: #222;
  --c-black-3: #1b1b1b;
  --c-black-4: #101112;
  --c-white-1: #fff;
  --c-red-1: #c81515;
  --c-grey-1: #4e5256;
  --c-grey-2: #515255;
  --c-grey-3: #515432;
  --c-grey-4: #acb2bb;
  --c-grey-5: #adaf92;
  --c-grey-6: #777;
  --c-green-1: #1e8e10;
  --c-green-2: #118e32;
  --card-shape-circular: 100%;
  --card-shape-square: 0%;
  --card-shape-rounded-edge: 10%;
  /*########################### MAIN USER CONFIGURABLE VALUES #########################*/
  /* like gotoxy() in c/c++ [ move with respect to parent's position ]*/
  --radial_dial_pos_x: 200px;
  --radial_dial_pos_y: 40px;

  --dial_radius: 100px; /*70*/
  --dial-thickness: 10px;
  /* Choose:
    --card-shape-circular -> creates a circular card
    --card-shape-square -> creates a square card
    --card-shape-rounded-edge -> creates a rounded edge card
  */
  --card-shape: var(--card-shape-rounded-edge);

  /*####################################################################################*/

  --card-padding-around: calc(2.5 * var(--dial_radius));

  --dial_box_width: calc(
    (4 * var(--dial_radius)) + (2 * var(--dial-thickness)) +
      var(--card-padding-around)
  );
  --dial_box_height: calc(
    (4 * var(--dial_radius)) + (2 * var(--dial-thickness)) +
      var(--card-padding-around)
  );
  --dial-box-text-color: var(--c-grey-6);
  --pi: 3.15; /*3.1415*/
  --dial_circumference: calc(2 * var(--dial_radius) * var(--pi));
  --dial_one_percent: calc(var(--dial_circumference) / 100);

  /*affect inner and outer circle position*/
  /*affects diameter of middle circle */
  /*larger(val) => larger the diameter of middle circle*/
  --box-size: calc((2 * var(--dial_radius)) + var(--dial-thickness)); /*130px*/

  --dial_pos_x: calc(var(--dial_radius) + 0); /*70*/
  --dial_pos_y: calc(var(--dial_radius) + 0); /*70*/

  /* --dial_radius  vs --dial_zero_value
    60px : 376px
    70px : 440px
   */
  /* Initial pixel value when the dial set to 0 - manually calibrate it according to --dial_radius*/
  /* --dial_zero_value: 376px; */
  --dial_zero_value: var(--dial_circumference);

  /* Set this value to 0 to calibrate "--dial_zero_value"*/
  /* Set this value to 1 by default"*/
  --calibrate_flag: 1;

  --dial-counter-text-color: var(--c-grey-6);
  --dial-units-text-color: var(--c-grey-6);

  /* Both inner circle and outer circle */
  --displace-down: calc(var(--dial-thickness) / 2);
  --displace-left: calc(var(--dial-thickness) / 2);

  --middle-circle-color: none;

  --top-color: var(--c-black-3);
  --middle-color: var(--c-black-2);
  --bottom-color: var(--c-black-3);

  --gc-1: linear-gradient(
    0deg,
    var(--bottom-color),
    var(--middle-color),
    var(--top-color)
  );
  --gc-2: linear-gradient(
    0deg,
    var(--c-blue-1),
    var(--c-black-2),
    var(--c-black-3)
  );
  --gc-3: linear-gradient(0deg, #f7cc76, #a473d0, #31ece9);
  --gc-4: linear-gradient(0deg, #f7cc76, #a473d0, #31ece9);

  --card-background-color: var(--gc-2); /*red*/
  --box-color: #222; /*#222*/

  /* Dial Advanced Properties */
  --outer-circle-thickness: var(--dial-thickness);
  --inner-circle-thickness: var(--dial-thickness);

  --outer-circle-color: var(--c-grey-1);
  --inner-circle-color: var(--c-green-2);

  /* This creates a split in inner circle */
  /* Note: 
     *
     * if ( --inner-circle-segments == 0){
     *      #manully set
     *      --c-inner-circle-segments: var(--dial_circumference);
     * }
     * 
     */
  /*
    --inner-circle-segments: 2;
     
     --c-inner-circle-segments: calc( var(--dial_circumference)  / ( 2 * var(--inner-circle-segments)) ); 
    */
  /* No segments in inner circle */

  --c-inner-circle-segments: var(--dial_circumference);
}

.radial_dial {
  position: relative;
  width: var(--dial_box_width); /*900px*/
  height: var(--dial_box_height); /*auto*/
  display: flex;
  justify-content: space-around;
  --dial_position: 0; /* 0 - This attribute shoule be updated from javascript according to sensor value*/
  padding-top: var(--radial_dial_pos_y);
  padding-left: var(--radial_dial_pos_x);
}

/* radial_dial segment bounce during hover */
.radial_dial .card {
  position: relative;
  background: var(--card-background-color);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50%; /* 250 px Radial Dial Card width*/
  height: 50%; /* 300 px Radial Dial Card Height*/
  border-radius: var(
    --card-shape
  ); /* Radial Dial Card dimention square (small number) to ellipse (large number)*/
  text-align: center;
  font-family: sans-serif;
  overflow: hidden;
  transition: 0.5s;
}

.radial_dial .card:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: -50%; /* Create a light split in the cards */
  background: rgb(255, 255, 255, 0.03);
  pointer-events: none;
  z-index: 1;
}

.radial_dial .card:hover {
  transform: translateY(-10px);
  box-shadow: 0 15px 35px rgb(0, 0, 0, 0.5);
}

.box {
  position: relative;
  width: var(--box-size); /*120px*/
  height: var(--box-size); /*120px*/
  border-radius: 50%; /*50%*/
  box-shadow: inset 0 0 50px #000; /* 0 0 50px #000*/
  background: var(--box-color); /*#222*/
  z-index: 1000;
}

.box .value {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  color: var(--dial-counter-text-color);
  font-weight: 600;
  font-size: calc(var(--dial_radius) * 0.66);
  transition: 0.5s;
}

.box .unit {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  color: var(--dial-units-text-color);
  font-size: calc(var(--dial_radius) * 0.3); /*15px*/
  padding-top: calc(0.6 * var(--dial_radius)); /*0.65*/
  padding-left: 1px;
  transition: 0.5s;
}

.card:hover .box .unit {
  color: #fff;
  transition: 0.5s;
}

.card:hover .box .value {
  color: #fff;
  font-size: calc(var(--dial_radius) * 0.7); /*50px*/
}

.card .box .text {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center; /*center*/
  align-items: center; /*center*/
  border-radius: 50%;
  color: var(--dial-box-text-color);
  font-weight: 700;
  font-size: calc(var(--dial_radius) * 0.3); /*14px*/
  padding-top: calc(var(--dial_radius) * 1.4); /*1.5*/
  transition: 0.5s;
  letter-spacing: 1px;
  text-transform: uppercase;
  transition: 0.5s;
}

.card:hover .box .text {
  color: #fff;
}
.card:hover .box .text {
  color: #fff;
}

svg {
  width: 100%; /*100%*/
  height: 100%; /*100%*/
  position: relative;
  z-index: 1000;
}

/* Circle Center Area (or) circle in the middle*/
/* Consider this are .middle_circle*/
svg circle {
  fill: var(--middle-circle-color);
  stroke-linecap: round;
  transform: translate(var(--displace-left), var(--displace-down));
}

.radial_dial .outer_circle {
  stroke-width: var(--outer-circle-thickness);
  cx: var(--dial_pos_x);
  cy: var(--dial_pos_y);
  r: var(--dial_radius);
  stroke: var(--outer-circle-color);
}
/* Draw Circle 2 on top of Circle 1 ( Almost Same Property )*/
/* Set the initial percentage movement for the dial*/
.radial_dial .inner_circle {
  stroke-width: var(--inner-circle-thickness);
  cx: var(--dial_pos_x);
  cy: var(--dial_pos_y);
  r: var(--dial_radius);

  /* Create segments in circle like clock */
  stroke-dasharray: var(--c-inner-circle-segments);

  /* Create segments in circle like clock */
  --meter-abs-percentage-increase: calc(
    var(--dial_position) * var(--dial_one_percent)
  );
  --meter-reading-increment-forward: calc(
    var(--dial_zero_value) - var(--meter-abs-percentage-increase)
  );
  --meter-reading-increment-reverse: calc(
    var(--dial_zero_value) + var(--meter-abs-percentage-increase)
  );
  stroke-dashoffset: var(--meter-reading-increment-forward);
  stroke: var(--inner-circle-color);
}
